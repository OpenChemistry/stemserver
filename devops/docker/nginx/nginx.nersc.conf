user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    upstream girder {
        server app-girder:8080 max_fails=10 fail_timeout=30;
    }

    upstream flask {
        server app-flask:5000 max_fails=10 fail_timeout=30;
    }

    upstream client {
        server web-client max_fails=10 fail_timeout=30;
    }

    server {
        listen      80;
        listen [::]:80;
        server_name stem.tomviz.org;

        location / {
            rewrite ^ https://$host$request_uri? permanent;
        }

        #for certbot challenges (renewal process)
        location ~ /.well-known/acme-challenge {
            allow all;
            root /data/letsencrypt;
        }
    }

    server {
        server_name stem.tomviz.org;
        listen 443 ssl http2 proxy_protocol;
        listen [::]:443 ssl http2 proxy_protocol;
        client_max_body_size 500M;

        server_tokens off;

        ssl on;

        ssl_buffer_size 8k;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4;

        ssl_certificate /etc/letsencrypt/live/stem.tomviz.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/stem.tomviz.org/privkey.pem;

        include /data/nginx/ips.conf;

        location /api/v1 {
            proxy_set_header Host $proxy_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://app-girder:8080/api/v1;
            # Must set the following for SSE notifications to work
            proxy_buffering off;
            proxy_cache off;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            chunked_transfer_encoding off;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
        }
        location /api/static {
            proxy_pass http://app-girder/static;
        }

        location /socket.io {
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass http://flask/socket.io;
        }

        location /login {
            proxy_pass http://flask/login;
        }

        location / {
            proxy_pass          http://client;
        }
    }
}
